/*** This file is generated by makeTickFinance.py, do not edit ***/

#include "tsTickFinance.h"
#include <babel/StrBuf.h>

int tsTickFactoryFinance::serializedTailSize(const tsTick& tick) const
{
    switch(tick.mType)
    {
    case tsTickType_Price: return tsTickPrice::tailSize;
    case tsTickType_Volume: return tsTickVolume::tailSize;
    case tsTickType_PriceVolume: return tsTickPriceVolume::tailSize;

    }

    return tsTickFactory::serializedTailSize(tick);
}

void tsTickFactoryFinance::serializeTail(const tsTick* pTick, char* pBuf) const
{
    switch(pTick->mType)
    {
    case tsTickType_Price: static_cast<const tsTickPrice*>(pTick)->serializeTail(pBuf); break;
    case tsTickType_Volume: static_cast<const tsTickVolume*>(pTick)->serializeTail(pBuf); break;
    case tsTickType_PriceVolume: static_cast<const tsTickPriceVolume*>(pTick)->serializeTail(pBuf); break;

    default:
        tsTickFactory::serializeTail(pTick, pBuf);
        break;
    }
}

void tsTickFactoryFinance::unserializeTail(const char* pBuf, tsTick* pTick) const
{
    switch(pTick->mType)
    {
    case tsTickType_Price: static_cast<tsTickPrice*>(pTick)->unserializeTail(pBuf); break;
    case tsTickType_Volume: static_cast<tsTickVolume*>(pTick)->unserializeTail(pBuf); break;
    case tsTickType_PriceVolume: static_cast<tsTickPriceVolume*>(pTick)->unserializeTail(pBuf); break;

    default:
        return tsTickFactory::unserializeTail(pBuf, pTick);
    }
}

std::string tsTickFactoryFinance::strTail(const tsTick* pTick) const
{
    switch(pTick->mType)
    {
    case tsTickType_Price: return static_cast<const tsTickPrice*>(pTick)->strTail();
    case tsTickType_Volume: return static_cast<const tsTickVolume*>(pTick)->strTail();
    case tsTickType_PriceVolume: return static_cast<const tsTickPriceVolume*>(pTick)->strTail();

    default:
        return tsTickFactory::strTail(pTick);
    }
}


void tsTickPrice::serializeTail(char* pBuf) const
{
}

void tsTickPrice::unserializeTail(const char* pBuf)
{
}

std::string tsTickPrice::strTail() const
{
    bbStrBuf str;
    str.Printf(bbT(",%lg=price,%u=opt"), mPrice, mOpt);
    return std::string(str.GetPtr());
}


void tsTickVolume::serializeTail(char* pBuf) const
{
}

void tsTickVolume::unserializeTail(const char* pBuf)
{
}

std::string tsTickVolume::strTail() const
{
    bbStrBuf str;
    str.Printf(bbT(",%I64u=volume,%u=opt"), mVolume, mOpt);
    return std::string(str.GetPtr());
}


void tsTickPriceVolume::serializeTail(char* pBuf) const
{
}

void tsTickPriceVolume::unserializeTail(const char* pBuf)
{
}

std::string tsTickPriceVolume::strTail() const
{
    bbStrBuf str;
    str.Printf(bbT(",%lg=price,%I64u=volume,%u=opt"), mPrice, mVolume, mOpt);
    return std::string(str.GetPtr());
}


